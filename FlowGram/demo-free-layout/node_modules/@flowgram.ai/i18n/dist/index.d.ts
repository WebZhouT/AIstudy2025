import * as _flowgram_ai_utils from '@flowgram.ai/utils';
import { I18n as I18n$1 } from 'i18n-js';

type Scope = Readonly<string | string[]>;
interface TranslateOptions {
    defaultValue?: any;
    [key: string]: any;
}
interface I18nLanguage {
    languageId: string;
    languageName?: string;
    localizedLanguageName?: string;
    contents: Record<string, string | string[]>;
}
declare class I18nImpl {
    i18n: I18n$1;
    private _onLanguageChangeEmitter;
    readonly onLanguageChange: _flowgram_ai_utils.Event<string>;
    constructor(languages: I18nLanguage[]);
    /**
     * missing check
     */
    missingStrictMode: boolean;
    /**
     * @param key
     * @param options
     */
    t(key: Scope, options?: TranslateOptions): string;
    get locale(): string;
    set locale(locale: string);
    addLanguages(newLanguage: I18nLanguage[]): void;
    addLanguage(language: I18nLanguage): void;
}
declare const I18n: I18nImpl;

export { I18n, type I18nLanguage };
