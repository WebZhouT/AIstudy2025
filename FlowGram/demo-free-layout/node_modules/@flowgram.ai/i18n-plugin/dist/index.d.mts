import { I18nLanguage } from '@flowgram.ai/i18n';
export { I18n, I18nLanguage } from '@flowgram.ai/i18n';
import * as _flowgram_ai_core from '@flowgram.ai/core';

interface I18nPluginOptions {
    locale?: string;
    /**
     * use `locale` instead
     * @deprecated
     */
    localLanguage?: string;
    /**
     * if missingStrictMode is true
     *  expect(I18n.t('Unknown')).toEqual('[missing "en-US.Unknown" translation]')
     * else
     *  expect(I18n.t('Unknown')).toEqual('Unknown')
     */
    missingStrictMode?: boolean;
    languages?: I18nLanguage[] | Record<string, Record<string, any>>;
    onLanguageChange?: (languageId: string) => void;
}
/**
 * I18n Plugin
 */
declare const createI18nPlugin: _flowgram_ai_core.PluginCreator<I18nPluginOptions>;

export { type I18nPluginOptions, createI18nPlugin };
